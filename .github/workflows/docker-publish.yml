name: Build & Publish Docker Image

# We want to run on:
#  • any push to main (to build “latest”)
#  • any push of a tag (to build that tag)
on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "study-tracker/study-tracker"

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Determine which tag(s) we should use for this build:
      #    • If this event is a push to main, we’ll push "latest"
      #    • If this event is a push of a Git tag, we’ll push that exact tag (e.g. "v1.2.3")
      - name: Set image name & tags
        id: vars
        run: |
          # Base image name on the GHCR path: ghcr.io/<owner>/<repo>/app-name
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}" >> $GITHUB_OUTPUT
          echo "IMAGE_REPOSITORY=${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

          # By default, no tag is set. We'll set one of these two:
          IMAGE_TAG=""

          if [[ "${{ github.ref_type }}" == "branch" && "${{ github.ref_name }}" == "main" ]]; then
            # a push to main → use 'latest'
            IMAGE_TAG="latest"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            # a push of a Git tag → use that tag name
            IMAGE_TAG="${{ github.ref_name }}"
          fi

          # Export for subsequent steps
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        if: steps.vars.outputs.IMAGE_TAG != ''
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true

          # Full registry path = ghcr.io/<owner>/<repo>:<tag>
          tags: |
            ${{ steps.vars.outputs.IMAGE_REGISTRY }}/${{ steps.vars.outputs.IMAGE_REPOSITORY }}:${{ steps.vars.outputs.IMAGE_TAG }}
